

#export EDITOR="vim"

#export XDG_CONFIG_HOME="$HOME/.config"

#
# set PATH so it includes user's private bin directories
export PATH="$HOME/bin:$HOME/.local/bin:$PATH"
# linuxbrew
#export PATH="$HOME/.linuxbrew/bin:$HOME/.linuxbrew/sbin:$PATH"
#export HOMEBREW_PREFIX="$HOME/.linuxbrew"
#export HOMEBREW_CELLAR="$HOME/.linuxbrew/Cellar"
#export HOMEBREW_REPOSITORY="$HOME/.linuxbrew/Homebrew"
#export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
#export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"

#
## Android SDK
#export ANDROID_HOME=$HOME/Android/Sdk
#export PATH=$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$PATH

#
# Anaconda3 
#export PATH="$HOME/anaconda3/bin:$PATH"
#

#
# Go
export PATH="/usr/local/go/bin:$HOME/go/bin:$PATH"
export GOPATH="$HOME/go"
#

#
# Nodejs
export PATH="/usr/local/lib/nodejs/node-v10.15.3-linux-x64/bin:$PATH"

# If this is an xterm set the title to user@host:dir
# change to xterm 256 colors

export TERM=xterm-256color
export COLORTERM=xterm-256color

#powerline
#powerline-daemon -q
#POWERLINE_BASH_CONTINUATION=1
#POWERLINE_BASH_SELECT=1
#. $HOME/.local/lib/python2.7/site-packages/powerline/bindings/bash/powerline.sh

#### my settings ####

export HISTSIZE=10000000000
export HISTFILESIZE=20000000000

alias ll='ls -lh'
alias lll='ls -hitlarF'
alias d='ls -dl */'
alias df='df -h'
alias "cd.."='cd ..'
alias sai='sudo apt-get install'
#alias emacs='emacs-fix'
alias sqlite='sqlite3'

alias notebook="jupyter notebook --port=8888 --NotebookApp.notebook_dir='/home/ssriram/my/projects/notebooks'"

#export XLIB_SKIP_ARGB_VISUALS=1

### tmux
#unset TMUX

tmux has-session -t base
if [ $? != 0 ]; then
  tmux new -s base -d
fi
#tmux attach -t base


### my scripts ###

source ~/my/dev/j/j.sh

source /usr/local/share/chruby/chruby.sh
source /usr/local/share/chruby/auto.sh
chruby 2.6.5

# function backup_history(){
# 	part=`date +%Y%m`
# 	history_file=~/.bash_history
# 	history_file_bkp=${history_file}_${part}
# 	lines=200

# 	if [ -s "$history_file" -a "$history_file" -nt "$history_file_bkp" ]; then
# 	  if [[ -f $history_file_bkp ]]; then
# 	    cp -f $history_file $history_file_bkp
# 	  else
# 	    mv -f $history_file $history_file_bkp
# 	    tail -n$lines $history_file_bkp > $history_file
# 	    history -r
# 	  fi
# 	fi
# }

#function backup_history(){
#  part=bkp #`date +%Y%m`
#  history_file=~/.bash_history
#  history_file_bkp=${history_file}_${part}
#  lines=2000
#
#  if [ -e "$history_file"  ]; then
#    if [ -s "$history_file" ]; then
#      cat $history_file | sort | uniq >> $history_file_bkp
#    fi
#    if [ ! -e "$history_file_bkp" ]; then
#      cp $history_file $history_file_bkp
#    fi
#    tail -n$lines $history_file_bkp > $history_file
#    history -r
#  fi  
#}

#backup_history
